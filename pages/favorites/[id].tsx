import type { NextPage } from "next";
import Head from "next/head";
import mongoose from "mongoose";
import type { NextPageContext } from "next/";
import userModel from "../../models/user";
import { faArrowRight, faArrowLeft } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import type user from "../../interface/user";
import cart from "../../interface/cart";
import cartModel from "../../models/cart";
import { useContext, useEffect, useState } from "react";
import UserContext from "../../providers/userProvider";
import CartContext from "../../providers/cartProvider";
import Item from "../../components/Item";
interface Props {
  user: user;
  cart: cart;
}
const Favorites: NextPage<Props> = ({ user, cart }) => {
  const { setUser } = useContext(UserContext);
  const { setCart } = useContext(CartContext);
  useEffect(() => {
    if (setUser && setCart) {
      setUser(user);
      setCart(cart);
    }
  }, []);
  const arrOfItems = [];
  const [index, setIndex] = useState(0);
  const { favorites } = user;

  if (favorites) {
    for (let i = 0; i !== Math.ceil(favorites.length / 8); i++) {
      arrOfItems.push(favorites.slice(i * 8, (i + 1) * 8));
    }
  }
  function changeIndex(dir: "add" | "sub") {
    if (dir == "add") {
      if (index === arrOfItems.length - 1) return;
      setIndex((i) => i + 1);
    }
    if (dir == "sub") {
      if (index === 0) return;
      setIndex((i) => i - 1);
    }
  }
  return (
    <>
      <Head>
        <title>Ecommerce</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main className="flex flex-col bg-white h-screen">
        <div className="flex flex-wrap">
          {arrOfItems[index] &&
            arrOfItems[index].map((el) => <Item item={el} key={el._id} />)}
        </div>
        <div className="flex mx-auto my-5 items-center mt-auto">
          <button onClick={() => changeIndex("sub")}>
            <FontAwesomeIcon
              icon={faArrowLeft}
              className="text-2xl mx-5 text-gray-600"
            />
          </button>
          {arrOfItems.map((el, i) => {
            return (
              <div
                className={
                  "mx-3 px-5 py-3 rounded-full" +
                  (i === index ? " bg-purple-700 text-white" : "")
                }
              >
                {i + 1}
              </div>
            );
          })}
          <button onClick={() => changeIndex("add")}>
            <FontAwesomeIcon
              icon={faArrowRight}
              className="text-2xl mx-5 text-gray-600"
            />
          </button>
        </div>
      </main>
    </>
  );
};

export async function getServerSideProps({ req, query }: NextPageContext) {
  const { id } = query;
  const conn = await mongoose.connect(
    "mongodb://127.0.0.1:6000/ecommerse?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.4.2"
  );
  const user: user[] | null = await userModel.find<user>().populate({
    path: "favorites",
  });
  const cart: cart | null = await cartModel
    .findOne<cart>({ owner: id })
    .populate({
      path: "items",
      populate: {
        path: "item",
        model: "item",
      },
    });

  return {
    props: {
      user: JSON.parse(JSON.stringify(user[0])),
      cart: JSON.parse(JSON.stringify(cart)),
    },
  };
}

export default Favorites;
