import type { NextPage } from "next";
import Head from "next/head";
import mongoose from "mongoose";
import orderModel from "../../models/orders";
import type order from "../../interface/order";
import type { NextPageContext } from "next/";
import userModel from "../../models/user";
import type user from "../../interface/user";
import cart from "../../interface/cart";
import cartModel from "../../models/cart";
import { useContext, useEffect } from "react";
import UserContext from "../../providers/userProvider";
import OrderItem from "../../components/OderItem";
import CartContext from "../../providers/cartProvider";
interface Props {
  orders: order[];
  user: user;
  cart: cart;
}
const Orders: NextPage<Props> = ({ orders, user, cart }) => {
  const { setUser } = useContext(UserContext);
  const { setCart } = useContext(CartContext);
  useEffect(() => {
    if (setUser && setCart) {
      setUser(user);
      setCart(cart);
    }
  }, []);
  return (
    <>
      <Head>
        <title>Ecommerce</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main className="h-screen mt-15">
        {orders.length === 0 && <p>No orders</p>}
        {orders.map((el) => (
          <OrderItem key={el._id} order={el} />
        ))}
      </main>
    </>
  );
};

export async function getServerSideProps(context: NextPageContext) {
  const { req, query } = context;
  const { id } = query;
  const conn = await mongoose.connect(
    "mongodb://127.0.0.1:6000/ecommerse?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.4.2"
  );
  const orders: order[] = await orderModel
    .find<order>({ orderedBy: id })
    .populate("items");
  const user: user[] | null = await userModel.find<user>();
  const cart: cart | null = await cartModel
    .findOne<cart>({ owner: id })
    .populate({
      path: "items",
      populate: {
        path: "item",
        model: "item",
      },
    });

  return {
    props: {
      orders: JSON.parse(JSON.stringify(orders)),
      user: JSON.parse(JSON.stringify(user[0])),
      cart: JSON.parse(JSON.stringify(cart)),
    },
  };
}

export default Orders;
