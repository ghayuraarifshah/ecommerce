import type { NextPage } from "next";
import Head from "next/head";
import mongoose from "mongoose";
import itemModel from "../models/items";
import type item from "../interface/item";
import Item from "../components/Item";
import { useState } from "react";
import { faArrowRight, faArrowLeft } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";

interface Props {
  items: item[];
}
const Home: NextPage<Props> = ({ items }) => {
  const arrOfItems = [];
  for (let i = 0; i !== Math.ceil(items.length / 8); i++) {
    arrOfItems.push(items.slice(i * 8, (i + 1) * 8));
  }
  function changeIndex(dir: "add" | "sub") {
    if (dir == "add") {
      if (index === arrOfItems.length - 1) return;
      setIndex((i) => i + 1);
    }
    if (dir == "sub") {
      if (index === 0) return;
      setIndex((i) => i - 1);
    }
  }
  const [index, setIndex] = useState(0);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main className="flex flex-col mt-12 bg-white">
        <div className="flex flex-wrap">
          {arrOfItems[index].map((el) => (
            <Item item={el} key={el.id} />
          ))}
        </div>
        <div className="flex mx-auto my-5 items-center ">
          <button onClick={() => changeIndex("sub")}>
            <FontAwesomeIcon
              icon={faArrowLeft}
              className="text-2xl mx-5 text-gray-600"
            />
          </button>
          {arrOfItems.map((el, i) => {
            return (
              <div
                className={
                  "mx-3 px-5 py-3 rounded-full" +
                  (i === index ? " bg-purple-700 text-white" : "")
                }
              >
                {i + 1}
              </div>
            );
          })}
          <button onClick={() => changeIndex("add")}>
            <FontAwesomeIcon
              icon={faArrowRight}
              className="text-2xl mx-5 text-gray-600"
            />
          </button>
        </div>
      </main>
    </>
  );
};

export async function getServerSideProps() {
  const conn = await mongoose.connect(
    "mongodb://127.0.0.1:6000/ecommerse?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.4.2"
  );
  const items: item[] = await itemModel.find();
  conn.disconnect();
  return {
    props: { items: JSON.parse(JSON.stringify(items)) },
  };
}

export default Home;
