import type { NextPage } from "next";
import Head from "next/head";
import mongoose from "mongoose";
import itemModel from "../models/items";
import type item from "../interface/item";
import Item from "../components/Item";
import { useContext, useEffect, useState } from "react";
import { faArrowRight, faArrowLeft } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import user from "../interface/user";
import userModel from "../models/user";
import secret from "../secret";
import cart from "../interface/cart";
import cartModel from "../models/cart";
import UserContext from "../providers/userProvider";
import CartContext from "../providers/cartProvider";
interface Props {
  items: item[];
  user: user;
  initcart: cart;
}
const Home: NextPage<Props> = ({ items, user, initcart }) => {
  const { setUser } = useContext(UserContext);
  const { setCart } = useContext(CartContext);
  useEffect(() => {
    if (setUser && setCart) {
      setUser(user);
      setCart(initcart);
    }
  }, []);
  const arrOfItems = [];
  for (let i = 0; i !== Math.ceil(items.length / 9); i++) {
    arrOfItems.push(items.slice(i * 9, (i + 1) * 9));
  }
  function changeIndex(dir: "add" | "sub") {
    if (dir == "add") {
      if (index === arrOfItems.length - 1) return;
      setIndex((i) => i + 1);
    }
    if (dir == "sub") {
      if (index === 0) return;
      setIndex((i) => i - 1);
    }
  }
  const [index, setIndex] = useState(0);
  return (
    <>
      <main>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
        </Head>
        <main className="flex flex-col bg-white">
          <div className="grid lg:grid-cols-3 sm:grid-cols-2 gap-5 mx-3">
            {arrOfItems[index] &&
              arrOfItems[index].map((el) => <Item item={el} key={el._id} />)}
          </div>
          <div className="flex mx-auto my-5 items-center ">
            <button onClick={() => changeIndex("sub")}>
              <FontAwesomeIcon
                icon={faArrowLeft}
                className="text-2xl mx-5 text-gray-600"
              />
            </button>
            {index != 0 && (
              <div className="mx-3 sm:px-8 px-5 py-3 rounded-full bg-purple-500 text-white">
                1
              </div>
            )}
            <div className="mx-3 px-8 py-3 rounded-full border-purple-500 border text-purple-500">
              {index + 1}
            </div>
            {index !== arrOfItems.length - 1 && (
              <div className="mx-3 sm:px-8 px-5 py-3 rounded-full bg-purple-500 text-white">
                {arrOfItems.length}
              </div>
            )}
            <button onClick={() => changeIndex("add")}>
              <FontAwesomeIcon
                icon={faArrowRight}
                className="text-2xl mx-5 text-gray-600"
              />
            </button>
          </div>
        </main>
      </main>
    </>
  );
};

export async function getServerSideProps() {
  const conn = await mongoose.connect(secret.monogo);
  const items: item[] = await itemModel.find();
  const user: user[] = await userModel.find().populate({
    path: "favorites",
  });
  const cart: cart | null = await cartModel
    .findOne<cart>({ owner: user[0]._id })
    .populate({
      path: "items",
      populate: {
        path: "item",
        model: "item",
      },
    });
  if (cart == null) {
    const cart = new cartModel<cart>({
      items: [],
      quantity: 0,
      total: 0,
      owner: user[0]._id,
    });
    await cart.save();
    conn.disconnect();
    return {
      props: {
        items: JSON.parse(JSON.stringify(items)),
        user: JSON.parse(JSON.stringify(user[0])),
        cart: JSON.parse(JSON.stringify(cart)),
      },
    };
  }
  conn.disconnect();
  return {
    props: {
      items: JSON.parse(JSON.stringify(items)),
      user: JSON.parse(JSON.stringify(user[0])),
      initcart: JSON.parse(JSON.stringify(cart)),
    },
  };
}

export default Home;
